"use strict";var ApplicationConfiguration=function(){var applicationModuleName="docketing-system",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("copyrights"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("patents"),ApplicationConfiguration.registerModule("trademarks"),ApplicationConfiguration.registerModule("users"),angular.module("copyrights").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Copyrights","copyrights","dropdown","/copyrights(/create)?"),Menus.addSubMenuItem("topbar","copyrights","List Copyrights","copyrights"),Menus.addSubMenuItem("topbar","copyrights","New Copyright","copyrights/create")}]),angular.module("copyrights").config(["$stateProvider",function($stateProvider){$stateProvider.state("listCopyrights",{url:"/copyrights",templateUrl:"modules/copyrights/views/list-copyrights.client.view.html"}).state("createCopyright",{url:"/copyrights/create",templateUrl:"modules/copyrights/views/create-copyright.client.view.html"}).state("viewCopyright",{url:"/copyrights/:copyrightId",templateUrl:"modules/copyrights/views/view-copyright.client.view.html"}).state("editCopyright",{url:"/copyrights/:copyrightId/edit",templateUrl:"modules/copyrights/views/edit-copyright.client.view.html"})}]),angular.module("copyrights").controller("CopyrightsController",["$scope","$stateParams","$location","Authentication","Copyrights",function($scope,$stateParams,$location,Authentication,Copyrights){$scope.authentication=Authentication,$scope.workTypeOptions=[{id:0,name:"TX"},{id:1,name:"VA"},{id:2,name:"SR"},{id:3,name:"PA"}],$scope.create=function(){var copyright=new Copyrights({owner:this.owner,author:this.author,workType:this.workType,workTitle:this.workTitle,publishedDate:this.publishedDate,registrationDate:this.registrationDate,registrationNumber:this.registrationNumber,comments:this.comments});copyright.$save(function(response){$location.path("copyrights/"+response._id),$scope.owner="",$scope.author="",$scope.workType="",$scope.workTitle="",$scope.publishedDate="",$scope.registrationDate="",$scope.registrationNumber="",$scope.comments=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(copyright){if(copyright){copyright.$remove();for(var i in $scope.copyrights)$scope.copyrights[i]===copyright&&$scope.copyrights.splice(i,1)}else $scope.copyright.$remove(function(){$location.path("copyrights")})},$scope.update=function(){var copyright=$scope.copyright;copyright.$update(function(){$location.path("copyrights/"+copyright._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.copyrights=Copyrights.query()},$scope.findOne=function(){$scope.copyright=Copyrights.get({copyrightId:$stateParams.copyrightId})},$scope.listItemClick=function(copyrightId){location.href="#!/copyrights/"+copyrightId}}]),angular.module("copyrights").factory("Copyrights",["$resource",function($resource){return $resource("copyrights/:copyrightId",{copyrightId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","$http","Authentication",function($scope,$http,Authentication){$scope.authentication=Authentication,this.sendMail=function(){var data={contactName:this.contactName,contactEmail:this.contactEmail};$http.post("/",data).success(function(data,status,headers,config){console.log("heyyyyyyy")}).error(function(data,status,headers,config){})}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("patents").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Patents","patents","dropdown","/patents(/create)?"),Menus.addSubMenuItem("topbar","patents","List Patents","patents"),Menus.addSubMenuItem("topbar","patents","New Patent","patents/create")}]),angular.module("patents").config(["$stateProvider",function($stateProvider){$stateProvider.state("listPatents",{url:"/patents",templateUrl:"modules/patents/views/list-patents.client.view.html"}).state("createPatent",{url:"/patents/create",templateUrl:"modules/patents/views/create-patent.client.view.html"}).state("viewPatent",{url:"/patents/:patentId",templateUrl:"modules/patents/views/view-patent.client.view.html"}).state("editPatent",{url:"/patents/:patentId/edit",templateUrl:"modules/patents/views/edit-patent.client.view.html"})}]),angular.module("patents").controller("PatentsController",["$scope","$stateParams","$location","Authentication","Patents",function($scope,$stateParams,$location,Authentication,Patents){$scope.authentication=Authentication,$scope.statusOptions=[{id:0,name:"Provisional Application"},{id:1,name:"Notice to File Missing Parts"},{id:2,name:"Restriction Requirement"},{id:3,name:"Office Action"},{id:4,name:"Extension 1"},{id:5,name:"Extension 2"},{id:6,name:"Extension 3"},{id:7,name:"NOA"},{id:8,name:"Issued"},{id:9,name:"Design Patent"},{id:10,name:"Utility Patent"}],$scope.create=function(){var patent=new Patents({owner:this.owner,nature:this.nature,country:this.country,filingDate:this.filingDate,issueDate:this.issueDate,applicationNumber:this.applicationNumber,patentNumber:this.patentNumber,patentStatus:this.patentStatus,statusDate:this.statusDate,dueDate:this.dueDate,secondDueDate:this.secondDueDate,thirdDueDate:this.thirdDueDate,comments:this.comments});patent.$save(function(response){$location.path("patents/"+response._id),$scope.owner="",$scope.nature="",$scope.country="",$scope.filingDate="",$scope.issueDate="",$scope.applicationNumber="",$scope.patentNumber="",$scope.patentStatus="",$scope.statusDate="",$scope.dueDate="",$scope.secondDueDate="",$scope.thirdDueDate="",$scope.comments=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(patent){if(patent){patent.$remove();for(var i in $scope.patents)$scope.patents[i]===patent&&$scope.patents.splice(i,1)}else $scope.patent.$remove(function(){$location.path("patents")})},$scope.update=function(){var patent=$scope.patent;patent.$update(function(){$location.path("patents/"+patent._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.patents=Patents.query()},$scope.findOne=function(){$scope.patent=Patents.get({patentId:$stateParams.patentId})},$scope.listItemClick=function(patentId){location.href="#!/patents/"+patentId},$scope.getDueDate=function(month,year,day,month_offset,year_offset){var dueDateMonth=month+month_offset,dueDateYear=year+year_offset;return dueDateMonth>12&&(dueDateMonth%=12,dueDateYear+=1),10>dueDateMonth&&(dueDateMonth=dueDateMonth.toString(),dueDateMonth="0"+dueDateMonth),10>day&&(day=day.toString(),day="0"+day),dueDateYear=dueDateYear.toString(),dueDateMonth=dueDateMonth.toString(),day=day.toString(),dueDateYear+"-"+dueDateMonth+"-"+day},$scope.calculateDueDates=function(selectedOption){console.log(selectedOption);var dateParts=this.statusDate.match(/(\d{4})\-(\d{2})\-(\d{2})/),month=+dateParts[2],year=+dateParts[1],day=+dateParts[3];switch(selectedOption){case 0:this.dueDate=$scope.getDueDate(month,year,day,0,1);break;case 1:this.dueDate=$scope.getDueDate(month,year,day,2,0);break;case 2:this.dueDate=$scope.getDueDate(month,year,day,2,0);break;case 3:this.dueDate=$scope.getDueDate(month,year,day,3,0);break;case 4:this.dueDate=$scope.getDueDate(month,year,day,1,0);break;case 5:this.dueDate=$scope.getDueDate(month,year,day,1,0);break;case 6:this.dueDate=$scope.getDueDate(month,year,day,1,0);break;case 7:this.dueDate=$scope.getDueDate(month,year,day,3,0);break;case 8:this.dueDate=$scope.getDueDate(month,year,day,0,3),this.secondDueDate=$scope.getDueDate(month,year,day,0,7),this.thirdDueDate=$scope.getDueDate(month,year,day,0,11);break;case 9:this.dueDate=$scope.getDueDate(month,year,day,0,14);break;default:this.dueDate=$scope.getDueDate(month,year,day,0,20)}}}]),angular.module("patents").factory("Patents",["$resource",function($resource){return $resource("patents/:patentId",{patentId:"@_id"},{update:{method:"PUT"}})}]),angular.module("trademarks").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Trademarks","trademarks","dropdown","/trademarks(/create)?"),Menus.addSubMenuItem("topbar","trademarks","List Trademarks","trademarks"),Menus.addSubMenuItem("topbar","trademarks","New Trademark","trademarks/create")}]),angular.module("trademarks").config(["$stateProvider",function($stateProvider){$stateProvider.state("listTrademarks",{url:"/trademarks",templateUrl:"modules/trademarks/views/list-trademarks.client.view.html"}).state("createTrademark",{url:"/trademarks/create",templateUrl:"modules/trademarks/views/create-trademark.client.view.html"}).state("viewTrademark",{url:"/trademarks/:trademarkId",templateUrl:"modules/trademarks/views/view-trademark.client.view.html"}).state("editTrademark",{url:"/trademarks/:trademarkId/edit",templateUrl:"modules/trademarks/views/edit-trademark.client.view.html"})}]),angular.module("trademarks").controller("TrademarksController",["$scope","$stateParams","$location","Authentication","Trademarks",function($scope,$stateParams,$location,Authentication,Trademarks){$scope.authentication=Authentication,$scope.statusOptions=[{id:0,name:"Pending"},{id:1,name:"Published"},{id:2,name:"NOA"},{id:3,name:"Notice of Abandonment"},{id:4,name:"Office Action"},{id:5,name:"Extension 1"},{id:6,name:"Extension 2"},{id:7,name:"Extension 3"},{id:8,name:"Extension 4"},{id:9,name:"Extension 5"},{id:10,name:"Registration Date"}],$scope.create=function(){var trademark=new Trademarks({owner:this.owner,mark:this.mark,country:this.country,ic:this.ic,goodsAndServices:this.goodsAndServices,filingDate:this.filingDate,registrationDate:this.registrationDate,applicationNumber:this.applicationNumber,registrationNumber:this.registrationNumber,trademarkStatus:this.trademarkStatus,statusDate:this.statusDate,dueDate:this.dueDate,secondDueDate:this.secondDueDate,comments:this.comments});trademark.$save(function(response){$location.path("trademarks/"+response._id),$scope.owner="",$scope.mark="",$scope.country="",$scope.ic="",$scope.goodsAndServices="",$scope.filingDate="",$scope.registrationDate="",$scope.applicationNumber="",$scope.registrationNumber="",$scope.trademarkStatus="",$scope.statusDate="",$scope.dueDate="",$scope.secondDueDate="",$scope.comments=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(trademark){if(trademark){trademark.$remove();for(var i in $scope.trademarks)$scope.trademarks[i]===trademark&&$scope.trademarks.splice(i,1)}else $scope.trademark.$remove(function(){$location.path("trademarks")})},$scope.update=function(){var trademark=$scope.trademark;trademark.$update(function(){$location.path("trademarks/"+trademark._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.trademarks=Trademarks.query()},$scope.findOne=function(){$scope.trademark=Trademarks.get({trademarkId:$stateParams.trademarkId})},$scope.listItemClick=function(trademarkId){location.href="#!/trademarks/"+trademarkId},$scope.getDueDate=function(month,year,day,month_offset,year_offset){var dueDateMonth=month+month_offset,dueDateYear=year+year_offset;return dueDateMonth>12&&(dueDateMonth%=12,dueDateYear+=1),10>dueDateMonth&&(dueDateMonth=dueDateMonth.toString(),dueDateMonth="0"+dueDateMonth),10>day&&(day=day.toString(),day="0"+day),dueDateYear=dueDateYear.toString(),dueDateMonth=dueDateMonth.toString(),day=day.toString(),dueDateYear+"-"+dueDateMonth+"-"+day},$scope.calculateDueDates=function(selectedOption){console.log(selectedOption);var dateParts=this.statusDate.match(/(\d{4})\-(\d{2})\-(\d{2})/),month=+dateParts[2],year=+dateParts[1],day=+dateParts[3];switch(selectedOption){case 0:this.dueDate=$scope.getDueDate(month,year,day,6,0);break;case 1:this.dueDate=$scope.getDueDate(month,year,day,6,0);break;case 2:this.dueDate=$scope.getDueDate(month,year,day,6,0);break;case 3:this.dueDate=$scope.getDueDate(month,year,day,2,0);break;case 4:this.dueDate=$scope.getDueDate(month,year,day,6,0);break;case 5:this.dueDate=$scope.getDueDate(month,year,day,6,0);break;case 6:this.dueDate=$scope.getDueDate(month,year,day,6,0);break;case 7:this.dueDate=$scope.getDueDate(month,year,day,6,0);break;case 8:this.dueDate=$scope.getDueDate(month,year,day,6,3);break;case 9:this.dueDate=$scope.getDueDate(month,year,day,6,14);break;default:this.dueDate=$scope.getDueDate(month,year,day,0,5),this.secondDueDate=$scope.getDueDate(month,year,day,0,10)}}}]),angular.module("trademarks").factory("Trademarks",["$resource",function($resource){return $resource("trademarks/:trademarkId",{trademarkId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);